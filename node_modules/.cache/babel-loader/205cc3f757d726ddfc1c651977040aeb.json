{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/MenuPage/drinks.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Button, TextField, FormControlLabel } from \"@material-ui/core\";\nimport water from \"../../images/water.jpeg\";\nimport icedTea from \"../../images/icedTea.jpeg\";\nimport coffee from \"../../images/coffee.png\";\nimport tea from \"../../images/tea.jpeg\";\nimport soda from \"../../images/soda.jpeg\";\nconst {\n  REACT_APP_API_URL\n} = process.env;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\nexport default function SimpleTable(props) {\n  const classes = useStyles();\n  const [count, setCount] = React.useState(0);\n  const [state, setState] = React.useState({\n    rows: []\n  });\n\n  const itemPhoto = item => {\n    switch (item) {\n      case 'Water':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: water,\n          alt: \"water\",\n          width: \"40px\",\n          height: \"50px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 24\n          }\n        });\n\n      case 'Soda':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: soda,\n          alt: \"soda\",\n          width: \"45px\",\n          height: \"60px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }\n        });\n\n      case 'Iced Tea':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: icedTea,\n          alt: \"icedTea\",\n          width: \"45px\",\n          height: \"65px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n\n      case 'Tea':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: tea,\n          alt: \"tea\",\n          width: \"50px\",\n          height: \"40px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }\n        });\n\n      case 'Coffee':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: coffee,\n          alt: \"coffee\",\n          width: \"50px\",\n          height: \"40px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return \"No photo provided\";\n    }\n  };\n\n  useEffect(() => {\n    setCount(0);\n    fetch(REACT_APP_API_URL + '/api/m/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(menuItems => {\n      menuItems.items.map(item => {\n        const items = menuItems.items.filter(items => items.category === 'beverages');\n        setState({ ...state,\n          rows: items\n        });\n      });\n    }).catch(e => console.log(e));\n  }, [count]);\n\n  const addOrder = item => {\n    const orderInfo = {\n      item,\n      tableId: props.tableId\n    };\n    fetch(REACT_APP_API_URL + '/api/o/', {\n      method: 'POST',\n      body: JSON.stringify(orderInfo),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(newOrder => {\n      if (newOrder) {\n        window.location.reload();\n      }\n    }).catch(e => console.log(e));\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, state.rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, itemPhoto(row.item)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, row.item), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, '$' + row.price), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    style: {\n      paddingRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => addOrder(row.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, \"Add\")))))));\n}","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/MenuPage/drinks.js"],"names":["React","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableRow","Paper","Button","TextField","FormControlLabel","water","icedTea","coffee","tea","soda","REACT_APP_API_URL","process","env","useStyles","table","minWidth","SimpleTable","props","classes","count","setCount","useState","state","setState","rows","itemPhoto","item","fetch","method","headers","localStorage","getItem","then","response","json","menuItems","items","map","filter","category","catch","e","console","log","addOrder","orderInfo","tableId","body","JSON","stringify","newOrder","window","location","reload","row","image","price","paddingRight","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,gBAA3B,QAAkD,mBAAlD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBC,OAAO,CAACC,GAAtC;AAEA,MAAMC,SAAS,GAAGlB,UAAU,CAAC;AACzBmB,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP;AADkB,CAAD,CAA5B;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoB3B,KAAK,CAAC4B,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAAC4B,QAAN,CAAe;AACrCG,IAAAA,IAAI,EAAE;AAD+B,GAAf,CAA1B;;AAIA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AACxB,YAAQA,IAAR;AACI,WAAK,OAAL;AACI,4BAAO;AAAK,UAAA,GAAG,EAAErB,KAAV;AAAiB,UAAA,GAAG,EAAC,OAArB;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAA0C,UAAA,MAAM,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,MAAL;AACI,4BAAO;AAAK,UAAA,GAAG,EAAEI,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAC,MAAjC;AAAwC,UAAA,MAAM,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,UAAL;AACI,4BAAO;AAAK,UAAA,GAAG,EAAEH,OAAV;AAAmB,UAAA,GAAG,EAAC,SAAvB;AAAiC,UAAA,KAAK,EAAC,MAAvC;AAA8C,UAAA,MAAM,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,KAAL;AACI,4BAAO;AAAK,UAAA,GAAG,EAAEE,GAAV;AAAe,UAAA,GAAG,EAAC,KAAnB;AAAyB,UAAA,KAAK,EAAC,MAA/B;AAAsC,UAAA,MAAM,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,QAAL;AACI,4BAAO;AAAK,UAAA,GAAG,EAAED,MAAV;AAAkB,UAAA,GAAG,EAAC,QAAtB;AAA+B,UAAA,KAAK,EAAC,MAArC;AAA4C,UAAA,MAAM,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO,mBAAP;AAZR;AAcH,GAfD;;AAiBAb,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAO,IAAAA,KAAK,CAACjB,iBAAiB,GAAG,SAArB,EAAgC;AACjCkB,MAAAA,MAAM,EAAE,KADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFZ;AAFwB,KAAhC,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAMqCF,IANrC,CAM0CG,SAAS,IAAI;AACnDA,MAAAA,SAAS,CAACC,KAAV,CAAgBC,GAAhB,CAAqBX,IAAD,IAAU;AAC1B,cAAMU,KAAK,GAAGD,SAAS,CAACC,KAAV,CAAgBE,MAAhB,CAAuBF,KAAK,IAAIA,KAAK,CAACG,QAAN,KAAmB,WAAnD,CAAd;AACAhB,QAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,UAAAA,IAAI,EAAEY;AAAjB,SAAD,CAAR;AACH,OAHD;AAIH,KAXD,EAWGI,KAXH,CAWSC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAXd;AAYH,GAdQ,EAcN,CAACtB,KAAD,CAdM,CAAT;;AAgBA,QAAMyB,QAAQ,GAAIlB,IAAD,IAAU;AACvB,UAAMmB,SAAS,GAAG;AAACnB,MAAAA,IAAD;AAAOoB,MAAAA,OAAO,EAAE7B,KAAK,CAAC6B;AAAtB,KAAlB;AACAnB,IAAAA,KAAK,CAACjB,iBAAiB,GAAG,SAArB,EAAgC;AACjCkB,MAAAA,MAAM,EAAE,MADyB;AAEjCmB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,SAAf,CAF2B;AAGjChB,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFZ;AAHwB,KAAhC,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAOqCF,IAPrC,CAO0CkB,QAAQ,IAAI;AAClD,UAAGA,QAAH,EAAa;AACTC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ,KAXD,EAWGb,KAXH,CAWSC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAXd;AAYH,GAdD;;AAgBA,sBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAExC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEiB,OAAO,CAACJ,KAA1B;AAAiC,kBAAW,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,KAAK,CAACE,IAAN,CAAWa,GAAX,CAAeiB,GAAG,iBACf,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,SAAS,CAAC6B,GAAG,CAAC5B,IAAL,CADd,CADJ,eAII,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B4B,GAAG,CAAC5B,IAA/B,CAJJ,eAKI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,MAAI4B,GAAG,CAACE,KAAnC,CALJ,eAMI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAE;AAAf,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAE,MAAMb,QAAQ,CAACU,GAAG,CAACI,EAAL,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CANJ,CADH,CADL,CADJ,CADJ,CADJ;AAoBH","sourcesContent":["import React, {useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Button, TextField, FormControlLabel} from \"@material-ui/core\";\nimport water from \"../../images/water.jpeg\";\nimport icedTea from \"../../images/icedTea.jpeg\";\nimport coffee from \"../../images/coffee.png\";\nimport tea from \"../../images/tea.jpeg\";\nimport soda from \"../../images/soda.jpeg\";\nconst { REACT_APP_API_URL } = process.env;\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 500\n    }\n});\n\nexport default function SimpleTable(props) {\n    const classes = useStyles();\n    const [count, setCount] = React.useState(0);\n    const [state, setState] = React.useState({\n        rows: [],\n    });\n\n    const itemPhoto = (item) => {\n        switch (item) {\n            case 'Water':\n                return <img src={water} alt=\"water\" width=\"40px\" height=\"50px\" />;\n            case 'Soda':\n                return <img src={soda} alt=\"soda\" width=\"45px\" height=\"60px\" />;\n            case 'Iced Tea':\n                return <img src={icedTea} alt=\"icedTea\" width=\"45px\" height=\"65px\" />;\n            case 'Tea':\n                return <img src={tea} alt=\"tea\" width=\"50px\" height=\"40px\" />;\n            case 'Coffee':\n                return <img src={coffee} alt=\"coffee\" width=\"50px\" height=\"40px\" />;\n            default:\n                return \"No photo provided\";\n        }\n    }\n\n    useEffect(() => {\n        setCount(0);\n        fetch(REACT_APP_API_URL + '/api/m/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(menuItems => {\n            menuItems.items.map((item) => {\n                const items = menuItems.items.filter(items => items.category === 'beverages');\n                setState({...state, rows: items});\n            })\n        }).catch(e => console.log(e))\n    }, [count])\n\n    const addOrder = (item) => {\n        const orderInfo = {item, tableId: props.tableId};\n        fetch(REACT_APP_API_URL + '/api/o/', {\n            method: 'POST',\n            body: JSON.stringify(orderInfo),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(newOrder => {\n            if(newOrder) {\n                window.location.reload();\n            }\n        }).catch(e => console.log(e))\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableBody>\n                    {state.rows.map(row => (\n                        <TableRow key={row.image}>\n                            <TableCell align=\"center\">\n                                {itemPhoto(row.item)}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.item}</TableCell>\n                            <TableCell align=\"center\">{'$'+row.price}</TableCell>\n                            <TableCell align=\"center\" style={{paddingRight: 20}}>\n                                <Button variant=\"outlined\" color=\"primary\" onClick={() => addOrder(row.id)}>Add</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}