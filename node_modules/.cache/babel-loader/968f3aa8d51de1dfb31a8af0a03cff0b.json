{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/EmployeeProfiles/addForm.js\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, FormControl, FormHelperText } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport propTypes from 'prop-types';\nimport Copyright from \"../../components/copyRight\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst useStyles = theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass AddForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const {\n        username,\n        email,\n        password\n      } = this.state;\n      const errors = this.validate(username, email, password);\n      this.setState({\n        errors\n      });\n\n      if (Object.keys(this.state.errors).length === 0) {\n        this.props.submit(username, password, email);\n      }\n    };\n\n    this.validate = (username, email, password) => {\n      const errors = {};\n      if (!username) errors.username = \"Username can't be blank\";\n      if (!email) errors.email = \"Email can't be blank\";\n      if (!password) errors.password = \"Password cannot be blank\";\n      return errors;\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"xs\",\n      style: {\n        padding: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Add New Employee\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      error: !!this.state.errors.username,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, this.state.errors.username ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"username\",\n      label: \"Username\",\n      id: \"username\",\n      value: this.state.username,\n      onChange: this.handleInputChange,\n      autoComplete: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    }, this.state.errors.username)) : /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"username\",\n      label: \"Username\",\n      id: \"username\",\n      autoComplete: \"username\",\n      value: this.state.username,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      error: !!this.state.errors.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, this.state.errors.email ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n      error: true,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 45\n      }\n    }, this.state.errors.email)) : /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      error: !!this.state.errors.password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, this.state.errors.password ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n      error: true,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 45\n      }\n    }, this.state.errors.password)) : /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.props.close,\n      style: {\n        marginBottom: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nAddForm.propTypes = {\n  classes: propTypes.object.isRequired\n};\nexport default withRouter(connect()(withStyles(useStyles)(AddForm)));","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/EmployeeProfiles/addForm.js"],"names":["React","Avatar","Button","FormControl","FormHelperText","CssBaseline","TextField","Link","Grid","Box","LockOutlinedIcon","Typography","Container","withStyles","propTypes","Copyright","connect","withRouter","AddCircleOutlineIcon","useStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","primary","main","form","width","marginTop","submit","AddForm","Component","constructor","props","handleInputChange","event","value","name","target","setState","onSubmit","preventDefault","username","email","password","state","errors","validate","Object","keys","length","render","classes","padding","close","marginBottom","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, FormControl, FormHelperText } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport propTypes from 'prop-types';\nimport Copyright from \"../../components/copyRight\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass AddForm extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            errors: {}\n        }\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const { username, email, password } = this.state;\n        const errors = this.validate(username, email, password);\n        this.setState({ errors });\n        if(Object.keys(this.state.errors).length === 0) {\n            this.props.submit(username, password, email)\n        }\n    };\n\n    validate = (username, email, password) => {\n        const errors = {};\n        if(!username) errors.username = \"Username can't be blank\";\n        if(!email) errors.email = \"Email can't be blank\";\n        if(!password) errors.password = \"Password cannot be blank\";\n        return errors;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <Container maxWidth=\"xs\" style={{ padding: '0' }}>\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <AddCircleOutlineIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Add New Employee\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={this.onSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <FormControl fullWidth error={!!this.state.errors.username} required>\n                                    {this.state.errors.username ?\n                                        <>\n                                            <TextField\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"username\"\n                                                label=\"Username\"\n                                                id=\"username\"\n                                                value={this.state.username}\n                                                onChange={this.handleInputChange}\n                                                autoComplete=\"username\"\n                                            />\n                                            <FormHelperText>{this.state.errors.username}</FormHelperText>\n                                        </>\n                                        :\n                                        <TextField\n                                            variant=\"outlined\"\n                                            required\n                                            fullWidth\n                                            name=\"username\"\n                                            label=\"Username\"\n                                            id=\"username\"\n                                            autoComplete=\"username\"\n                                            value={this.state.username}\n                                            onChange={this.handleInputChange}\n                                        />\n                                    }\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl fullWidth error={!!this.state.errors.email} required>\n                                    {this.state.errors.email ?\n                                        <>\n                                            <TextField\n                                                error\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                id=\"email\"\n                                                label=\"Email Address\"\n                                                name=\"email\"\n                                                autoComplete=\"email\"\n                                                value={this.state.email}\n                                                onChange={this.handleInputChange}\n                                            />\n                                            <FormHelperText>{this.state.errors.email}</FormHelperText>\n                                        </>\n                                        :\n                                        <TextField\n                                            variant=\"outlined\"\n                                            required\n                                            fullWidth\n                                            id=\"email\"\n                                            label=\"Email Address\"\n                                            name=\"email\"\n                                            autoComplete=\"email\"\n                                            value={this.state.email}\n                                            onChange={this.handleInputChange}\n                                        />\n                                    }\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControl fullWidth error={!!this.state.errors.password} required>\n                                    {this.state.errors.password ?\n                                        <>\n                                            <TextField\n                                                error\n                                                variant=\"outlined\"\n                                                required\n                                                fullWidth\n                                                name=\"password\"\n                                                label=\"Password\"\n                                                type=\"password\"\n                                                id=\"password\"\n                                                autoComplete=\"current-password\"\n                                                value={this.state.password}\n                                                onChange={this.handleInputChange}\n                                            />\n                                            <FormHelperText>{this.state.errors.password}</FormHelperText>\n                                        </>\n                                        :\n                                        <TextField\n                                            variant=\"outlined\"\n                                            required\n                                            fullWidth\n                                            name=\"password\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            id=\"password\"\n                                            autoComplete=\"current-password\"\n                                            value={this.state.password}\n                                            onChange={this.handleInputChange}\n                                        />\n                                    }\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Submit\n                        </Button>\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={this.props.close}\n                            style={{ marginBottom: '1em' }}\n                        >\n                            Cancel\n                        </Button>\n                    </form>\n                </div>\n            </Container>\n        );\n    }\n}\n\nAddForm.propTypes = {\n    classes: propTypes.object.isRequired,\n};\n\nexport default withRouter(connect()(withStyles(useStyles)(AddForm)))\n\n"]},"metadata":{},"sourceType":"module"}