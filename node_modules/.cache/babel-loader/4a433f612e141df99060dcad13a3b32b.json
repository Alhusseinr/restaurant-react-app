{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/MenuPage/menu.js\";\nimport React, { useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Entrees from \"./entrees\";\nimport Drinks from \"./drinks\";\nimport Appetizers from \"./appetizers\";\nimport Soups from \"./soups\";\nimport Desserts from \"./desserts\";\nimport Cart from \"./cart\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport LastPage from './LastPage';\nconst {\n  REACT_APP_API_URL\n} = process.env;\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginTop: '1.5em',\n    marginBottom: '1.5em',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 1200,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  },\n  btn: {\n    margin: '0 .25em'\n  },\n  btnUpdate: {\n    backgroundColor: 'green'\n  }\n}));\nconst steps = [\"Beverages\", \"Appetizers\", \"Soups & Salads\", \"Entrees\", \"Desserts\"];\nexport default function Checkout(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [count, setCount] = React.useState(0);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [state, setState] = React.useState({\n    tableOrder: [],\n    tableTotal: 0,\n    edit: null,\n    tableId: props.match.params.tableId\n  });\n  const columns = [{\n    id: 'item',\n    label: 'Item',\n    align: 'center'\n  }, {\n    id: 'comments',\n    label: 'Comments',\n    align: 'center'\n  }, {\n    id: 'status',\n    label: 'Status',\n    align: 'center'\n  }, {\n    id: 'price',\n    label: 'Item Price',\n    align: 'center'\n  }];\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/React.createElement(Drinks, {\n          tableId: state.tableId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 24\n          }\n        });\n\n      case 1:\n        return /*#__PURE__*/React.createElement(Appetizers, {\n          tableId: state.tableId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 24\n          }\n        });\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Soups, {\n          tableId: state.tableId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 24\n          }\n        });\n\n      case 3:\n        return /*#__PURE__*/React.createElement(Entrees, {\n          tableId: state.tableId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 24\n          }\n        });\n\n      case 4:\n        return /*#__PURE__*/React.createElement(Desserts, {\n          tableId: state.tableId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 24\n          }\n        });\n\n      case 5:\n        return /*#__PURE__*/React.createElement(Cart, {\n          tableId: state.tableId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return \"Unknown step\";\n    }\n  };\n\n  useEffect(() => {\n    setCount(0);\n    const tableId = props.match.params.tableId;\n    fetch(REACT_APP_API_URL + `/api/t/Table/${tableId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(table => {\n      console.log(table);\n      fetch(REACT_APP_API_URL + '/api/m/', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('jwtToken')\n        }\n      }).then(response => response.json()).then(allItems => {\n        //console.log(allItems.items);\n        table.tableOrders.map(tableOrder => {\n          const order = allItems.items.filter(order => order.id === tableOrder.item);\n          tableOrder.item = order[0].item;\n          tableOrder.price = order[0].price;\n        });\n        setState({ ...state,\n          tableOrder: table.tableOrders,\n          tableTotal: table.tableTotal,\n          tableId\n        });\n      }).catch(e => console.log(e));\n    }).catch(e => console.log(e));\n  }, [count]);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const checkout = () => {\n    setActiveStep(5);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const editable = id => {\n    setState({ ...state,\n      edit: id\n    });\n  };\n\n  const cancelEditable = () => {\n    setState({ ...state,\n      edit: false\n    });\n  };\n\n  const updateValue = (id, columnId, e) => {\n    let tempRow = null;\n    state.tableOrder.map(order => {\n      if (order.id === id) {\n        tempRow = order;\n        tempRow[columnId] = e.target.value;\n      }\n    });\n    let newRows = [];\n    state.tableOrder.map(order => {\n      if (order.id === id) {\n        newRows.push(tempRow);\n      } else {\n        newRows.push(order);\n      }\n    });\n    setState({ ...state,\n      rows: newRows\n    });\n  };\n\n  const updateOrder = (id, comments, price, status) => {\n    const tableId = props.match.params.tableId;\n    const orderInfo = {\n      id,\n      comments,\n      price,\n      status,\n      tableId\n    };\n    console.log(orderInfo);\n    fetch(REACT_APP_API_URL + '/api/o/', {\n      method: 'PUT',\n      body: JSON.stringify(orderInfo),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(result => {\n      if (result) {\n        window.location.reload();\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const deleteOrder = id => {\n    console.log(id);\n    fetch(REACT_APP_API_URL + '/api/o/', {\n      method: 'DELETE',\n      body: JSON.stringify({\n        id\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(result => {\n      if (result) {\n        window.location.reload();\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const cleanTable = (id, waiterId, orderId, status, total) => {\n    fetch(REACT_APP_API_URL + '/api/t/', {\n      method: 'PUT',\n      body: JSON.stringify({\n        id,\n        waiterId,\n        orderId,\n        status,\n        total\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        window.location.reload();\n      }\n    }).catch(e => console.log(e));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, \"Table Order\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    className: classes.stepper,\n    alternativeLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  }, label)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, \"Back\"), activeStep === steps.length - 1 ? '' : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, \"Next\")))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, state.tableOrder.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  }, \"Table Orders\")) : '', /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    style: {\n      margin: '2em 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 37\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 49\n    }\n  }, column.label))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, state.tableOrder.length > 0 ? state.tableOrder.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 49\n      }\n    }, columns.map(column => {\n      const value = order[column.id];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, state.edit === order.id ? /*#__PURE__*/React.createElement(TableCell, {\n        key: order.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        style: {\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 73\n        }\n      }, column.id === 'price' || column.id === 'item' ? /*#__PURE__*/React.createElement(TextField, {\n        disabled: true,\n        id: order.username,\n        label: column.id,\n        value: value,\n        onChange: e => updateValue(order.id, column.id, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 81\n        }\n      }) : /*#__PURE__*/React.createElement(TextField, {\n        id: order.username,\n        label: column.id,\n        value: value,\n        onChange: e => updateValue(order.id, column.id, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 81\n        }\n      }))) : /*#__PURE__*/React.createElement(TableCell, {\n        key: order.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 69\n        }\n      }, column.id === 'price' ? /*#__PURE__*/React.createElement(React.Fragment, null, `$` + value) : /*#__PURE__*/React.createElement(React.Fragment, null, value)));\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.align,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 53\n      }\n    }, state.edit === order.id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.btnUpdate,\n      onClick: () => updateOrder(order.id, order.comments, order.price, order.status),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 65\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.btn,\n      onClick: cancelEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 65\n      }\n    }, \"Cancel\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.btn,\n      onClick: () => editable(order.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 65\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.btn,\n      onClick: () => deleteOrder(order.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 65\n      }\n    }, \"Delete\"))));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      margin: '.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 82\n    }\n  }, \"There are no orders for table #\", state.tableId))), /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 49\n    }\n  }, state.tableTotal > 0 ? /*#__PURE__*/React.createElement(LastPage, {\n    tableId: state.tableId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 57\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: () => cleanTable(state.tableId, state.tableOrder.waiterId, state.tableOrder.id, 'clean', state.tableOrder.total),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 57\n    }\n  }, \"Cleaned\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      margin: '0 .25em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 85\n    }\n  }, \"Total:\"), \" $\", state.tableTotal))))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 15],\n    component: \"div\",\n    count: state.tableOrder.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/MenuPage/menu.js"],"names":["React","useEffect","Fragment","makeStyles","Stepper","Step","StepLabel","Button","Paper","Typography","Entrees","Drinks","Appetizers","Soups","Desserts","Cart","Grid","Table","TableHead","TableRow","TableCell","TableBody","FormControl","TextField","TablePagination","LastPage","REACT_APP_API_URL","process","env","useStyles","theme","appBar","position","layout","width","marginTop","marginBottom","marginLeft","spacing","marginRight","breakpoints","up","paper","padding","stepper","buttons","display","justifyContent","button","btn","margin","btnUpdate","backgroundColor","steps","Checkout","props","classes","activeStep","setActiveStep","useState","count","setCount","page","setPage","rowsPerPage","setRowsPerPage","state","setState","tableOrder","tableTotal","edit","tableId","match","params","columns","id","label","align","getStepContent","step","fetch","method","headers","localStorage","getItem","then","response","json","table","console","log","allItems","tableOrders","map","order","items","filter","item","price","catch","e","handleNext","handleBack","checkout","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","editable","cancelEditable","updateValue","columnId","tempRow","newRows","push","rows","updateOrder","comments","status","orderInfo","body","JSON","stringify","result","window","location","reload","error","deleteOrder","cleanTable","waiterId","orderId","total","root","instructions","length","column","slice","username","textAlign"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Entrees from \"./entrees\";\nimport Drinks from \"./drinks\";\nimport Appetizers from \"./appetizers\";\nimport Soups from \"./soups\";\nimport Desserts from \"./desserts\";\nimport Cart from \"./cart\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport LastPage from './LastPage';\n\nconst {REACT_APP_API_URL} = process.env;\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: \"relative\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: '1.5em',\n        marginBottom: '1.5em',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 1200,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3)\n        }\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5)\n    },\n    buttons: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1)\n    },\n    btn: {\n        margin: '0 .25em'\n    },\n    btnUpdate: {\n        backgroundColor: 'green'\n    }\n}));\n\nconst steps = [\n    \"Beverages\",\n    \"Appetizers\",\n    \"Soups & Salads\",\n    \"Entrees\",\n    \"Desserts\",\n];\n\nexport default function Checkout(props) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [count, setCount] = React.useState(0);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [state, setState] = React.useState({\n        tableOrder: [],\n        tableTotal: 0,\n        edit: null,\n        tableId: props.match.params.tableId,\n    });\n\n    const columns = [\n        {id: 'item', label: 'Item', align: 'center'},\n        {id: 'comments', label: 'Comments', align: 'center'},\n        {id: 'status', label: 'Status', align: 'center'},\n        {id: 'price', label: 'Item Price', align: 'center'},\n    ];\n\n\n    const getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <Drinks tableId={state.tableId}/>;\n            case 1:\n                return <Appetizers tableId={state.tableId}/>;\n            case 2:\n                return <Soups tableId={state.tableId}/>;\n            case 3:\n                return <Entrees tableId={state.tableId}/>;\n            case 4:\n                return <Desserts tableId={state.tableId}/>;\n            case 5:\n                return <Cart tableId={state.tableId}/>;\n            default:\n                return \"Unknown step\";\n        }\n    }\n\n    useEffect(() => {\n        setCount(0);\n        const tableId = props.match.params.tableId;\n        fetch(REACT_APP_API_URL + `/api/t/Table/${tableId}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(table => {\n            console.log(table);\n            fetch(REACT_APP_API_URL + '/api/m/', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': localStorage.getItem('jwtToken')\n                }\n            }).then(response => response.json()).then(allItems => {\n                //console.log(allItems.items);\n                table.tableOrders.map((tableOrder) => {\n                    const order = allItems.items.filter(order => order.id === tableOrder.item);\n                    tableOrder.item = order[0].item;\n                    tableOrder.price = order[0].price;\n                })\n                setState({...state, tableOrder: table.tableOrders, tableTotal: table.tableTotal, tableId});\n            }).catch(e => console.log(e));\n        }).catch(e => console.log(e))\n    }, [count])\n\n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    const checkout = () => {\n        setActiveStep(5);\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const editable = (id) => {\n        setState({...state, edit: id});\n    };\n\n    const cancelEditable = () => {\n        setState({...state, edit: false})\n    };\n\n    const updateValue = (id, columnId, e) => {\n        let tempRow = null;\n        state.tableOrder.map(order => {\n            if (order.id === id) {\n                tempRow = order;\n                tempRow[columnId] = e.target.value;\n            }\n        })\n\n        let newRows = [];\n        state.tableOrder.map(order => {\n            if (order.id === id) {\n                newRows.push(tempRow);\n            } else {\n                newRows.push(order);\n            }\n        })\n\n        setState({\n            ...state, rows: newRows\n        })\n    };\n\n    const updateOrder = (id, comments, price, status) => {\n        const tableId = props.match.params.tableId;\n        const orderInfo = {id, comments, price, status, tableId};\n        console.log(orderInfo);\n        fetch(REACT_APP_API_URL + '/api/o/', {\n            method: 'PUT',\n            body: JSON.stringify(orderInfo),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(result => {\n            if (result) {\n                window.location.reload();\n            }\n        }).catch(error => console.log(error))\n    };\n\n    const deleteOrder = (id) => {\n        console.log(id);\n        fetch(REACT_APP_API_URL + '/api/o/', {\n            method: 'DELETE',\n            body: JSON.stringify({id}),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(result => {\n            if (result) {\n                window.location.reload();\n            }\n        }).catch(error => console.log(error))\n    }\n\n    const cleanTable = (id, waiterId, orderId, status, total) => {\n        fetch(REACT_APP_API_URL + '/api/t/', {\n            method: 'PUT',\n            body: JSON.stringify({id, waiterId, orderId, status, total}),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => {\n            if (response.status === 200) {\n                window.location.reload();\n            }\n        }).catch(e => console.log(e))\n    }\n\n\n    return (\n        <Fragment>\n            <main className={classes.layout}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Table Order\n                </Typography>\n                <div className={classes.root}>\n                    <Stepper\n                        activeStep={activeStep}\n                        className={classes.stepper}\n                        alternativeLabel\n                    >\n                        {steps.map(label => (\n                            <Step key={label}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                    <div>\n                        <Typography className={classes.instructions}>\n                            {getStepContent(activeStep)}\n                        </Typography>\n                        <div className={classes.buttons}>\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleBack}\n                                className={classes.button}\n                            >\n                                Back\n                            </Button>\n                            {activeStep === steps.length - 1 ? '' :\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    Next\n                                </Button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <Grid container>\n                    {state.tableOrder.length > 0 ?\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                                Table Orders\n                            </Typography>\n                        </Grid>\n                        :\n                        ''\n                    }\n                    <Grid item style={{width: '100%'}}>\n                        <Paper className={classes.root} style={{margin: '2em 0'}}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                                <TableHead>\n                                    <TableRow>\n                                        {columns.map((column) => (\n                                            <TableCell\n                                                key={column.id}\n                                                align={column.align}\n                                            >\n                                                <strong>{column.label}</strong>\n                                            </TableCell>\n                                        ))}\n                                        <TableCell></TableCell>\n                                        <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {state.tableOrder.length > 0 ? state.tableOrder.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((order) => {\n                                            return (\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={order.id}>\n                                                    {columns.map((column) => {\n                                                        const value = order[column.id];\n                                                        return (\n                                                            <>\n                                                                {state.edit === order.id ?\n                                                                    <TableCell key={order.id} align={column.align}>\n                                                                        <FormControl style={{width: '100%'}}>\n                                                                            {column.id === 'price' || column.id === 'item' ?\n                                                                                <TextField disabled id={order.username}\n                                                                                           label={column.id} value={value}\n                                                                                           onChange={(e) => updateValue(order.id, column.id, e)}/>\n                                                                                :\n                                                                                <TextField id={order.username}\n                                                                                           label={column.id} value={value}\n                                                                                           onChange={(e) => updateValue(order.id, column.id, e)}/>\n                                                                            }\n                                                                        </FormControl>\n                                                                    </TableCell>\n                                                                    :\n                                                                    <TableCell key={order.id} align={column.align}>\n                                                                        {column.id === 'price' ?\n                                                                            <>\n                                                                                {`$` + value}\n                                                                            </>\n                                                                            :\n                                                                            <>\n                                                                                {value}\n                                                                            </>\n                                                                        }\n                                                                    </TableCell>\n                                                                }\n                                                            </>\n                                                        )\n                                                    })}\n                                                    <TableCell></TableCell>\n                                                    <TableCell className={classes.align} align=\"center\">\n                                                        {state.edit === order.id ?\n                                                            <>\n                                                                <Button variant=\"contained\" color=\"primary\"\n                                                                        className={classes.btnUpdate}\n                                                                        onClick={() => updateOrder(order.id, order.comments, order.price, order.status)}>Update</Button>\n                                                                <Button variant=\"contained\" color=\"secondary\"\n                                                                        className={classes.btn}\n                                                                        onClick={cancelEditable}>Cancel</Button>\n                                                            </>\n                                                            :\n                                                            <>\n                                                                <Button variant=\"contained\" color=\"primary\"\n                                                                        className={classes.btn}\n                                                                        onClick={() => editable(order.id)}>Edit</Button>\n                                                                <Button variant=\"contained\" color=\"secondary\"\n                                                                        className={classes.btn}\n                                                                        onClick={() => deleteOrder(order.id)}>Delete</Button>\n                                                            </>\n                                                        }\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                        :\n\n                                        <TableRow style={{textAlign: 'center'}}>\n                                            <Typography style={{margin: '.5em'}}><strong>There are no orders for table\n                                                #{state.tableId}</strong></Typography>\n                                        </TableRow>\n                                    }\n\n                                    <TableRow style={{width: '100%'}}>\n                                        <TableCell></TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell></TableCell>\n                                        <TableCell>\n                                            <Grid container alignItems='center' spacing={3}>\n                                                <Grid item md={6} style={{textAlign: 'right'}}>\n                                                    {state.tableTotal > 0\n                                                        ?\n                                                        <LastPage tableId={state.tableId}/>\n                                                        :\n                                                        <Button variant=\"outlined\" color=\"secondary\"\n                                                                onClick={() => cleanTable(state.tableId, state.tableOrder.waiterId, state.tableOrder.id,'clean', state.tableOrder.total)}>Cleaned</Button>\n                                                    }\n\n                                                </Grid>\n                                                <Grid item md={6}>\n                                                    <Typography\n                                                        style={{margin: '0 .25em'}}><strong>Total:</strong> ${state.tableTotal}\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 15]}\n                                component=\"div\"\n                                count={state.tableOrder.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </main>\n        </Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}