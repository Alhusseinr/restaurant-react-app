{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/TableView/tables.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withRouter } from 'react-router-dom';\nconst {\n  REACT_APP_API_URL\n} = process.env;\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  button: {\n    backgroundColor: \"#FAF84F\"\n  },\n  root: {\n    width: '100%'\n  },\n  ready: {\n    backgroundColor: 'green',\n    height: '100%',\n    width: '100%'\n  },\n  dirty: {\n    backgroundColor: 'red',\n    height: '100%',\n    width: '100%'\n  },\n  served: {\n    backgroundColor: '#ccc731',\n    height: '100%',\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nfunction SimpleTable(props) {\n  const classes = useStyles();\n  const [count, setCount] = React.useState(0);\n  const [state, setState] = React.useState({\n    rows: []\n  });\n  useEffect(() => {\n    setCount(0);\n    fetch(REACT_APP_API_URL + '/api/t/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n      setState({ ...state,\n        rows: result\n      });\n    }).catch(e => console.log(e));\n  }, [count]);\n\n  const status = row => {\n    switch (row.status) {\n      case 'clean':\n        return /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          className: classes.ready,\n          id: row.id,\n          onClick: () => {\n            props.history.push(`/tables/${row.id}`);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }\n        }, \"Table #\", row.id);\n\n      case 'serving':\n        return /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          className: classes.served,\n          id: row.id,\n          onClick: () => {\n            props.history.push(`/tables/${row.id}`);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 24\n          }\n        }, \"Table #\", row.id);\n\n      case 'dirty':\n        return /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          className: classes.dirty,\n          id: row.id,\n          onClick: () => {\n            props.history.push(`/tables/${row.id}`);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }\n        }, \"Table #\", row.id);\n\n      default:\n        return \"\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      margin: '0 4em',\n      textAlign: 'center'\n    },\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, state.rows.map(row => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 3,\n    lg: 3,\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, status(row))));\n}\n\nexport default withRouter(SimpleTable);","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/TableView/tables.js"],"names":["React","useEffect","makeStyles","Button","Grid","withRouter","REACT_APP_API_URL","process","env","useStyles","theme","table","minWidth","button","backgroundColor","root","width","ready","height","dirty","served","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleTable","props","classes","count","setCount","useState","state","setState","rows","fetch","method","headers","localStorage","getItem","then","response","json","result","console","log","catch","e","status","row","id","history","push","margin","textAlign","map"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {withRouter} from 'react-router-dom';\nconst {REACT_APP_API_URL} = process.env;\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: 650\n    },\n    button: {\n        backgroundColor: \"#FAF84F\"\n    },\n    root: {\n        width: '100%',\n    },\n    ready: {\n        backgroundColor: 'green',\n        height: '100%',\n        width: '100%'\n    },\n    dirty: {\n        backgroundColor: 'red',\n        height: '100%',\n        width: '100%'\n    },\n    served: {\n        backgroundColor: '#ccc731',\n        height: '100%',\n        width: '100%'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\n\nfunction SimpleTable(props) {\n    const classes = useStyles();\n    const [count, setCount] = React.useState(0);\n    const [state, setState] = React.useState({\n        rows: []\n    })\n\n    useEffect(() => {\n        setCount(0);\n        fetch(REACT_APP_API_URL + '/api/t/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(result => {\n            console.log(result);\n            setState({...state, rows: result});\n        }).catch(e => console.log(e))\n    }, [count])\n\n    const status = (row) => {\n        switch (row.status) {\n            case 'clean':\n                return <Button variant=\"contained\" className={classes.ready} id={row.id} onClick={() => { props.history.push(`/tables/${row.id}`) }} >\n                    Table #{row.id}\n                </Button>;\n            case 'serving':\n                return <Button variant=\"contained\" className={classes.served} id={row.id} onClick={() => { props.history.push(`/tables/${row.id}`) }} >\n                    Table #{row.id}\n                </Button>;\n            case 'dirty':\n                return <Button variant=\"contained\" className={classes.dirty} id={row.id} onClick={() => { props.history.push(`/tables/${row.id}`) }} >\n                    Table #{row.id}\n                </Button>;\n            default:\n                return \"\";\n        }\n    }\n\n    return (\n        <Grid container style={{ margin: '0 4em', textAlign: 'center'}} spacing={5}>\n            {state.rows.map(row => (\n                <Grid item xs={12} md={3} lg={3} key={row.id}>\n                    {status(row)}\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\nexport default withRouter(SimpleTable);"]},"metadata":{},"sourceType":"module"}