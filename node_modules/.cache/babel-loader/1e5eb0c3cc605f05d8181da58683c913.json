{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/EmployeeProfiles/addEmployee.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddForm from './addForm';\n\nclass AlertDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.register = (username, password, email) => {\n      fetch('http://127.0.0.1:5000/api/u/', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password,\n          email\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('jwtToken')\n        }\n      }).then(response => {\n        if (response.status === 400) {\n          window.location.reload();\n          console.log(response.body);\n        }\n\n        response.json();\n      }).then(result => {\n        if (result !== null) {\n          window.location.reload();\n        }\n\n        console.log(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: '1em'\n      },\n      onClick: this.handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Add An Employee\"), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClickOpen,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AddForm, {\n      close: this.handleClose,\n      submit: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default AlertDialog; // export default function AlertDialog(props) {\n//     // const [open, setOpen] = React.useState(false);\n//     // const [state, setState] = React.useState({\n//     //     username: '',\n//     //     email: '',\n//     //     password: '',\n//     //     errors: ''\n//     // })\n//     //\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n//\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n//     // const handleInputChange = (event) => {\n//     //     const { value, name } = event.target;\n//     //     setState({...state, [name]: value});\n//     // };\n//     //\n//     // const onSubmit = (event) => {\n//     //     event.preventDefault();\n//     //     const { username, email, password } = state;\n//     //     const errors = validate(username, email, password);\n//     //     setState({ ...state, errors });\n//     //     if(Object.keys(this.state.errors).length === 0) {\n//     //         this.props.submit(username, password, email)\n//     //     }\n//     // };\n//     //\n//     // const validate = (username, email, password) => {\n//     //     const errors = {};\n//     //     if(!username) errors.username = \"Username can't be blank\";\n//     //     if(!email) errors.email = \"Email can't be blank\";\n//     //     if(!password) errors.password = \"Password cannot be blank\";\n//     //     return errors;\n//     // };\n//\n//     return (\n//         <div>\n//             <Button variant=\"contained\" color=\"primary\" style={{margin: '1em'}} onClick={handleClickOpen}>\n//                 Add An Employee\n//             </Button>\n//             <Dialog\n//                 open={open}\n//                 onClose={handleClose}\n//                 aria-labelledby=\"alert-dialog-title\"\n//                 aria-describedby=\"alert-dialog-description\"\n//             >\n//                 <DialogTitle id=\"alert-dialog-title\"><strong>{\"Add a new employee\"}</strong></DialogTitle>\n//                 <DialogContent>\n//                     <DialogContentText id=\"alert-dialog-description\">\n//                         <strong>Please provide a username, email, and password</strong>\n//                     </DialogContentText>\n//                     <form>\n//                         <Grid container>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <TextField\n//                                     variant=\"outlined\"\n//                                     required\n//                                     fullWidth\n//                                     name=\"username\"\n//                                     label=\"Username\"\n//                                     id=\"username\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <TextField\n//                                     variant=\"outlined\"\n//                                     required\n//                                     fullWidth\n//                                     name=\"email\"\n//                                     label=\"Email\"\n//                                     id=\"email\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <TextField\n//                                     variant=\"outlined\"\n//                                     required\n//                                     fullWidth\n//                                     name=\"password\"\n//                                     label=\"Password\"\n//                                     id=\"password\"\n//                                     type=\"password\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <Button onClick={handleClose} variant=\"contained\" color=\"primary\" autoFocus style={{ width: '100%' }}>\n//                                     Submit\n//                                 </Button>\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <Button onClick={handleClose} variant=\"contained\" color=\"secondary\" style={{ width: '100%' }}>\n//                                     Cancel\n//                                 </Button>\n//                             </Grid>\n//                         </Grid>\n//                     </form>\n//                 </DialogContent>\n//             </Dialog>\n//         </div>\n//     );\n// }","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/EmployeeProfiles/addEmployee.js"],"names":["React","Button","Dialog","DialogContent","AddForm","AlertDialog","Component","constructor","props","handleClickOpen","setState","open","handleClose","register","username","password","email","fetch","method","body","JSON","stringify","headers","localStorage","getItem","then","response","status","window","location","reload","console","log","json","result","catch","err","state","render","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,eARmB,GAQD,MAAM;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,KAVkB;;AAAA,SAYnBC,WAZmB,GAYL,MAAM;AAChB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KAdkB;;AAAA,SAgBnBE,QAhBmB,GAgBR,CAACC,QAAD,EAAWC,QAAX,EAAqBC,KAArB,KAAgC;AACvCC,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,UAAAA,QADiB;AACPC,UAAAA,QADO;AACGC,UAAAA;AADH,SAAf,CAF4B;AAKlCM,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFZ;AALyB,OAAjC,CAAL,CASGC,IATH,CASQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvBC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACP,IAArB;AACH;;AACDO,QAAAA,QAAQ,CAACO,IAAT;AACH,OAfD,EAeGR,IAfH,CAeQS,MAAM,IAAI;AACd,YAAGA,MAAM,KAAK,IAAd,EAAoB;AAChBN,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACH,OApBD,EAoBGC,KApBH,CAoBSC,GAAG,IAAI;AAAEL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AAAmB,OApBrC;AAqBH,KAtCkB;;AAGf,SAAKC,KAAL,GAAa;AACT1B,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAmCD2B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAnD;AAAoE,MAAA,OAAO,EAAE,KAAK9B,eAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,oBAAC,MAAD;AACI,MAAA,IAAI,EAAE,KAAK4B,KAAL,CAAW1B,IADrB;AAEI,MAAA,OAAO,EAAE,KAAKF,eAFlB;AAGI,yBAAgB,oBAHpB;AAII,0BAAiB,0BAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKG,WAArB;AAAkC,MAAA,MAAM,EAAE,KAAKC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CAJJ,CADJ;AAiBH;;AA5DoC;;AA+DzC,eAAeR,WAAfsourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddForm from './addForm';\n\n\nclass AlertDialog extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n        }\n    }\n\n    handleClickOpen = () => {\n        this.setState({open: true});\n    };\n\n    handleClose = () => {\n        this.setState({ open: false })\n    };\n\n    register = (username, password, email)  => {\n        fetch('http://127.0.0.1:5000/api/u/', {\n            method: 'POST',\n            body: JSON.stringify({\n                username, password, email\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => {\n            if(response.status === 400){\n                window.location.reload();\n                console.log(response.body);\n            }\n            response.json()\n        }).then(result => {\n            if(result !== null) {\n                window.location.reload();\n            }\n            console.log(result);\n        }).catch(err => { console.log(err); })\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: '1em'}} onClick={this.handleClickOpen}>\n                    Add An Employee\n                </Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClickOpen}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogContent>\n                        <AddForm close={this.handleClose} submit={this.register} />\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AlertDialog;\n\n\n\n\n\n\n\n// export default function AlertDialog(props) {\n//     // const [open, setOpen] = React.useState(false);\n//     // const [state, setState] = React.useState({\n//     //     username: '',\n//     //     email: '',\n//     //     password: '',\n//     //     errors: ''\n//     // })\n//     //\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n//\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n\n//     // const handleInputChange = (event) => {\n//     //     const { value, name } = event.target;\n//     //     setState({...state, [name]: value});\n//     // };\n//     //\n//     // const onSubmit = (event) => {\n//     //     event.preventDefault();\n//     //     const { username, email, password } = state;\n//     //     const errors = validate(username, email, password);\n//     //     setState({ ...state, errors });\n//     //     if(Object.keys(this.state.errors).length === 0) {\n//     //         this.props.submit(username, password, email)\n//     //     }\n//     // };\n//     //\n//     // const validate = (username, email, password) => {\n//     //     const errors = {};\n//     //     if(!username) errors.username = \"Username can't be blank\";\n//     //     if(!email) errors.email = \"Email can't be blank\";\n//     //     if(!password) errors.password = \"Password cannot be blank\";\n//     //     return errors;\n//     // };\n//\n//     return (\n//         <div>\n//             <Button variant=\"contained\" color=\"primary\" style={{margin: '1em'}} onClick={handleClickOpen}>\n//                 Add An Employee\n//             </Button>\n//             <Dialog\n//                 open={open}\n//                 onClose={handleClose}\n//                 aria-labelledby=\"alert-dialog-title\"\n//                 aria-describedby=\"alert-dialog-description\"\n//             >\n//                 <DialogTitle id=\"alert-dialog-title\"><strong>{\"Add a new employee\"}</strong></DialogTitle>\n//                 <DialogContent>\n//                     <DialogContentText id=\"alert-dialog-description\">\n//                         <strong>Please provide a username, email, and password</strong>\n//                     </DialogContentText>\n//                     <form>\n//                         <Grid container>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <TextField\n//                                     variant=\"outlined\"\n//                                     required\n//                                     fullWidth\n//                                     name=\"username\"\n//                                     label=\"Username\"\n//                                     id=\"username\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <TextField\n//                                     variant=\"outlined\"\n//                                     required\n//                                     fullWidth\n//                                     name=\"email\"\n//                                     label=\"Email\"\n//                                     id=\"email\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <TextField\n//                                     variant=\"outlined\"\n//                                     required\n//                                     fullWidth\n//                                     name=\"password\"\n//                                     label=\"Password\"\n//                                     id=\"password\"\n//                                     type=\"password\"\n//                                 />\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <Button onClick={handleClose} variant=\"contained\" color=\"primary\" autoFocus style={{ width: '100%' }}>\n//                                     Submit\n//                                 </Button>\n//                             </Grid>\n//                             <Grid item xs={12} md={12} lg={12} style={{margin: '.5em 0' }}>\n//                                 <Button onClick={handleClose} variant=\"contained\" color=\"secondary\" style={{ width: '100%' }}>\n//                                     Cancel\n//                                 </Button>\n//                             </Grid>\n//                         </Grid>\n//                     </form>\n//                 </DialogContent>\n//             </Dialog>\n//         </div>\n//     );\n// }"]},"metadata":{},"sourceType":"module"}