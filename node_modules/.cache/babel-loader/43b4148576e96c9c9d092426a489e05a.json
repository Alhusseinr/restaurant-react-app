{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/MenuPage/soups.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Button } from \"@material-ui/core\";\nimport chickenNoodle from \"../../images/chickenNoodle.png\";\nimport onionSoup from \"../../images/onionSoup.png\";\nimport veggieSoup from \"../../images/veggieSoup.jpeg\";\nimport houseSalad from \"../../images/houseSalad.png\";\nimport caesarSalad from \"../../images/caesarSalad.jpg\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\nconst {\n  REACT_APP_API_URL\n} = process.env;\nexport default function SimpleTable(props) {\n  const classes = useStyles();\n  const [count, setCount] = React.useState(0);\n  const [state, setState] = React.useState({\n    rows: []\n  });\n\n  const itemPhoto = item => {\n    switch (item) {\n      case 'Chicken Noodle':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: chickenNoodle,\n          alt: \"chickenNoodle\",\n          width: \"70px\",\n          height: \"60px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }\n        });\n\n      case 'French Onion':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: onionSoup,\n          alt: \"onionSoup\",\n          width: \"70px\",\n          height: \"70px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        });\n\n      case 'Vegetable':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: veggieSoup,\n          alt: \"veggieSoup\",\n          width: \"70px\",\n          height: \"70px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }\n        });\n\n      case 'House Salad':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: houseSalad,\n          alt: \"houseSalad\",\n          width: \"70px\",\n          height: \"40px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        });\n\n      case 'Caesar Salad':\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: caesarSalad,\n          alt: \"caesarSalad\",\n          width: \"80px\",\n          height: \"60px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return \"No photo provided\";\n    }\n  };\n\n  useEffect(() => {\n    setCount(0);\n    fetch(REACT_APP_API_URL + '/api/m/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(menuItems => {\n      menuItems.items.map(item => {\n        const items = menuItems.items.filter(items => items.category === 'soups&Salads');\n        setState({\n          rows: items\n        });\n      }); //console.log('menu', menuItems.items);\n    }).catch(e => console.log(e));\n  }, [count]);\n\n  const addOrder = item => {\n    const orderInfo = {\n      item,\n      tableId: props.tableId\n    };\n    fetch(REACT_APP_API_URL + '/api/o/', {\n      method: 'POST',\n      body: JSON.stringify(orderInfo),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('jwtToken')\n      }\n    }).then(response => response.json()).then(newOrder => {\n      if (newOrder) {\n        window.location.reload();\n      }\n    }).catch(e => console.log(e));\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, state.rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, itemPhoto(row.item)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, row.item), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, '$' + row.price), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    style: {\n      paddingRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => addOrder(row.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, \"Add\")))))));\n}","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/MenuPage/soups.js"],"names":["React","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","chickenNoodle","onionSoup","veggieSoup","houseSalad","caesarSalad","useStyles","table","minWidth","REACT_APP_API_URL","process","env","SimpleTable","props","classes","count","setCount","useState","state","setState","rows","itemPhoto","item","fetch","method","headers","localStorage","getItem","then","response","json","menuItems","items","map","filter","category","catch","e","console","log","addOrder","orderInfo","tableId","body","JSON","stringify","newOrder","window","location","reload","row","image","price","paddingRight","id"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Button} from \"@material-ui/core\";\nimport chickenNoodle from \"../../images/chickenNoodle.png\";\nimport onionSoup from \"../../images/onionSoup.png\";\nimport veggieSoup from \"../../images/veggieSoup.jpeg\";\nimport houseSalad from \"../../images/houseSalad.png\";\nimport caesarSalad from \"../../images/caesarSalad.jpg\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 500\n    }\n});\n\nconst {REACT_APP_API_URL} = process.env;\n\nexport default function SimpleTable(props) {\n    const classes = useStyles();\n    const [count, setCount] = React.useState(0);\n    const [state, setState] = React.useState({\n        rows: []\n    });\n\n    const itemPhoto = (item) => {\n        switch (item) {\n            case 'Chicken Noodle':\n                return <img src={chickenNoodle} alt=\"chickenNoodle\" width=\"70px\" height=\"60px\"/>;\n            case 'French Onion':\n                return <img src={onionSoup} alt=\"onionSoup\" width=\"70px\" height=\"70px\"/>;\n            case 'Vegetable':\n                return <img src={veggieSoup} alt=\"veggieSoup\" width=\"70px\" height=\"70px\"/>;\n            case 'House Salad':\n                return <img src={houseSalad} alt=\"houseSalad\" width=\"70px\" height=\"40px\"/>;\n            case 'Caesar Salad':\n                return <img src={caesarSalad} alt=\"caesarSalad\" width=\"80px\" height=\"60px\"/>;\n            default:\n                return \"No photo provided\";\n        }\n    }\n\n    useEffect(() => {\n        setCount(0);\n        fetch(REACT_APP_API_URL + '/api/m/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(menuItems => {\n            menuItems.items.map((item) => {\n                const items = menuItems.items.filter(items => items.category === 'soups&Salads');\n                setState({rows: items});\n            })\n            //console.log('menu', menuItems.items);\n        }).catch(e => console.log(e))\n    }, [count])\n\n    const addOrder = (item) => {\n        const orderInfo = {item, tableId: props.tableId};\n        fetch(REACT_APP_API_URL + '/api/o/', {\n            method: 'POST',\n            body: JSON.stringify(orderInfo),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('jwtToken')\n            }\n        }).then(response => response.json()).then(newOrder => {\n            if(newOrder) {\n                window.location.reload();\n            }\n        }).catch(e => console.log(e))\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableBody>\n                    {state.rows.map(row => (\n                        <TableRow key={row.image}>\n                            <TableCell align=\"center\">\n                                {itemPhoto(row.item)}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.item}</TableCell>\n                            <TableCell align=\"center\">{'$' + row.price}</TableCell>\n                            <TableCell align=\"center\" style={{paddingRight: 20}}>\n                                <Button variant=\"outlined\" color=\"primary\" onClick={() => addOrder(row.id)}>Add</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}