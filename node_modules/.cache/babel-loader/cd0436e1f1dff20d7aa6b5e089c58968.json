{"ast":null,"code":"var _jsxFileName = \"/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/OrderQueue/queue.js\";\nimport React, { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport TopBar from \"../../components/TopBar\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 39\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 39\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 40\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 45\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 38\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 40\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 43\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 42\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 40\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 43\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 49\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }\n  })))\n};\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Table #\",\n      field: \"table\"\n    }, {\n      title: \"Order #\",\n      field: \"order\"\n    }, {\n      title: \"Status\",\n      field: \"status\"\n    }],\n    data: [{\n      table: \"1\",\n      order: \"1\",\n      status: \"ready\"\n    }, {\n      table: \"2\",\n      order: \"3\",\n      status: \"ordered\"\n    }, {\n      table: \"3\",\n      order: \"2\",\n      status: \"ready\"\n    }, {\n      table: \"4\",\n      order: \"4\",\n      status: \"ordered\"\n    }]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Order Queue\",\n    icons: tableIcons,\n    columns: state.columns,\n    data: state.data,\n    style: {\n      width: '100%',\n      margin: '4em'\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/alhusseinr1/Documents/Git/restaurant-automation-react-app/src/views/OrderQueue/queue.js"],"names":["React","forwardRef","MaterialTable","TopBar","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","MaterialTableDemo","state","setState","useState","columns","title","field","data","table","order","status","width","margin","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, {forwardRef} from \"react\";\nimport MaterialTable from \"material-table\";\nimport TopBar from \"../../components/TopBar\";\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\n};\n\nexport default function MaterialTableDemo() {\n    const [state, setState] = React.useState({\n        columns: [\n            {title: \"Table #\", field: \"table\"},\n            {title: \"Order #\", field: \"order\"},\n            {title: \"Status\", field: \"status\"}\n        ],\n        data: [\n            {\n                table: \"1\",\n                order: \"1\",\n                status: \"ready\"\n            },\n            {\n                table: \"2\",\n                order: \"3\",\n                status: \"ordered\"\n            },\n            {\n                table: \"3\",\n                order: \"2\",\n                status: \"ready\"\n            },\n            {\n                table: \"4\",\n                order: \"4\",\n                status: \"ordered\"\n            }\n        ]\n    });\n\n    return (\n        <>\n            <TopBar/>\n            <MaterialTable\n                title=\"Order Queue\"\n                icons={tableIcons}\n                columns={state.columns}\n                data={state.data}\n                style={{width: '100%', margin: '4em'}}\n                editable={{\n                    onRowAdd: newData =>\n                        new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve();\n                                setState(prevState => {\n                                    const data = [...prevState.data];\n                                    data.push(newData);\n                                    return {...prevState, data};\n                                });\n                            }, 600);\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve();\n                                if (oldData) {\n                                    setState(prevState => {\n                                        const data = [...prevState.data];\n                                        data[data.indexOf(oldData)] = newData;\n                                        return {...prevState, data};\n                                    });\n                                }\n                            }, 600);\n                        }),\n                    onRowDelete: oldData =>\n                        new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve();\n                                setState(prevState => {\n                                    const data = [...prevState.data];\n                                    data.splice(data.indexOf(oldData), 1);\n                                    return {...prevState, data};\n                                });\n                            }, 600);\n                        })\n                }}\n            />\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}